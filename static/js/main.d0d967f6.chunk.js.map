{"version":3,"sources":["Components/ContactList/ContactList.module.css","Components/FilterContacts/FilterContacts.module.css","Components/Container/Container.module.css","redux/contacts/contacts-actions.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-selectors.js","Components/Container/Container.js","Components/ContactForm/ContactForm.js","Components/ContactList/ContactList.js","Components/FilterContacts/FilterContacts.js","App.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js","Components/ContactForm/ContactForm.module.css"],"names":["module","exports","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","axios","defaults","baseURL","name","number","dispatch","a","contact","post","data","id","delete","get","getLoading","state","contacts","loading","getFilter","filter","getAllContacts","items","getVisibleContacts","createSelector","allContacts","normalizedFilter","toLowerCase","includes","Container","children","className","styles","container","ContactForm","handleSubmit","e","preventDefault","props","onSubmit","setState","find","alert","handleChangeName","currentTarget","value","handleChangeNumber","form","this","field","input","type","pattern","title","required","onChange","button","Component","connect","contactsOperations","onDeleteContact","list","map","item","onClick","target","label","App","fetchContacts","isLoading","createReducer","_","payload","combineReducers","rootReducer","contactsReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d0d967f6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactList_item__3Y_cN\",\"list\":\"ContactList_list__3XAHC\",\"button\":\"ContactList_button__1huwn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"FilterContacts_label__1Fue6\",\"input\":\"FilterContacts_input__23H2v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3Ol6p\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const fetchContactsRequest = createAction('contacts/fetchContactsRequest');\r\nexport const fetchContactsSuccess = createAction('contacts/fetchContactsSuccess');\r\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\r\n\r\nexport const addContactRequest = createAction('contacts/addContactRequest');\r\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\r\nexport const addContactError = createAction('contacts/addContactError');\r\n\r\nexport const deleteContactRequest = createAction('contacts/deleteContactRequest');\r\nexport const deleteContactSuccess = createAction('contacts/deleteContactSuccess');\r\nexport const deleteContactError = createAction('contacts/deleteContactError');\r\n\r\nexport const changeFilter = createAction('contacts/changeFilter');","import axios from 'axios';\r\nimport {\r\n    fetchContactsRequest,\r\n    fetchContactsSuccess,\r\n    fetchContactsError,\r\n    addContactRequest,\r\n    addContactSuccess,\r\n    addContactError,\r\n    deleteContactRequest,\r\n    deleteContactSuccess,\r\n    deleteContactError,\r\n} from './contacts-actions';\r\n\r\naxios.defaults.baseURL = 'http://localhost:4000';\r\n\r\nconst fetchContacts = () => async dispatch => {\r\n    dispatch(fetchContactsRequest());\r\n\r\n    try {\r\n        const { data } = await axios.get('/contacts');\r\n        dispatch(fetchContactsSuccess(data));\r\n    } catch (error) {\r\n        dispatch(fetchContactsError(error));\r\n    };\r\n};\r\n\r\nconst addContact = (name, number) => async dispatch => {\r\n    const contact = {\r\n        name,\r\n        number\r\n    };\r\n\r\n    dispatch(addContactRequest());\r\n\r\n    try {\r\n        const { data } = await axios.post('/contacts', contact);\r\n        dispatch(addContactSuccess(data));\r\n    } catch (error) {\r\n        dispatch(addContactError(error));\r\n    };\r\n};\r\n\r\nconst deleteContact = id => async dispatch => {\r\n    dispatch(deleteContactRequest());\r\n\r\n    try {\r\n        await axios.delete(`/contacts/${id}`);\r\n        dispatch(deleteContactSuccess(id))\r\n    } catch (error) {\r\n        dispatch(deleteContactError(error))\r\n    };\r\n};\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default {\r\n    addContact,\r\n    deleteContact,\r\n    fetchContacts\r\n}","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nexport const getLoading = state => state.contacts.loading;\r\n\r\nexport const getFilter = state => state.contacts.filter;\r\n\r\nexport const getAllContacts = state => state.contacts.items;\r\n\r\nexport const getVisibleContacts = createSelector(\r\n    [getAllContacts, getFilter], (allContacts, filter) => {\r\n        const normalizedFilter = filter.toLowerCase();\r\n        \r\n        return allContacts.filter(({ name }) =>\r\n            name.toLowerCase().includes(normalizedFilter));\r\n    }\r\n);","import React from 'react';\nimport styles from './Container.module.css';\n\nconst Container = ({ children }) => <div className={styles.container}>{children}</div>;\n\nexport default Container;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport contactsOperations from '../../redux/contacts/contacts-operations';\nimport { getAllContacts } from '../../redux/contacts/contacts-selectors';\nimport styles from './ContactForm.module.css';\n\nclass ContactForm extends Component {\n    state = {\n        name: '',\n        number: ''\n    }\n\n    handleSubmit = e => {\n        e.preventDefault();\n        const { name, number } = this.state;\n        const { contacts, onSubmit } = this.props;\n        this.setState({ name: '', number: '' });\n        \n        if (contacts.find(contact => contact.name === name)) {\n            alert(`${name} is already in contacts.`);\n            return;\n        };\n\n        onSubmit(name, number);\n    }\n\n    handleChangeName = e => {\n        this.setState({ name: e.currentTarget.value });\n    };\n\n    handleChangeNumber = e => {\n        this.setState({ number: e.currentTarget.value });\n    };\n\n    render () {\n        return (\n            <form className={styles.form} onSubmit={this.handleSubmit}>\n                <label className={styles.field}>\n                    Name\n                </label>\n                <input\n                    className={styles.input}\n                    type=\"text\"\n                    name=\"name\"\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                    title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n                    required\n                    value={this.state.name}\n                    onChange={this.handleChangeName}\n                />\n                <label className={styles.field}>\n                    Number\n                </label>\n                <input\n                    className={styles.input}\n                    type=\"tel\"\n                    name=\"number\"\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                    title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n                    required\n                    value={this.state.number}\n                    onChange={this.handleChangeNumber}\n                />\n                <button className={styles.button} type=\"submit\">\n                    Add contact\n                </button>\n            </form>\n        )\n    };\n};\n\nconst mapStateToProps = state => ({\n    contacts: getAllContacts(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onSubmit: (name, number) => dispatch(contactsOperations.addContact(name, number))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);","import React from 'react';\nimport { connect } from 'react-redux';\nimport contactsOperations from '../../redux/contacts/contacts-operations';\nimport { getVisibleContacts } from '../../redux/contacts/contacts-selectors';\nimport styles from './ContactList.module.css'\n\nconst ContactList = ({ contacts, onDeleteContact }) => {\n    return (\n        <ul className={styles.list}>\n            {\n                contacts.map(({ id, name, number }) =>\n                    <li className={styles.item} key={id}>{name}: {number}\n                        <button className={styles.button} type='button' onClick={() => onDeleteContact(id)}>Delete</button>\n                    </li>\n                )\n            }\n        </ul>\n    )\n};\n\nconst mapStateToProps = (state) => ({\n    contacts: getVisibleContacts(state)\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onDeleteContact: id => dispatch(contactsOperations.deleteContact(id))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { changeFilter } from '../../redux/contacts/contacts-actions';\nimport { getFilter } from '../../redux/contacts/contacts-selectors';\nimport styles from './FilterContacts.module.css'\n\nconst FilterContacts = ({ value, onChange }) => (\n  <label className={styles.label}>\n    Find contacts by name\n    <input className={styles.input} type=\"text\" value={value} onChange={onChange} />\n  </label>\n);\n\nconst mapStateToProps = (state) => ({\n    value: getFilter(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onChange: e => dispatch(changeFilter(e.target.value))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FilterContacts);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport contactsOperations from './redux/contacts/contacts-operations';\nimport { getLoading } from './redux/contacts/contacts-selectors';\nimport Container from \"./Components/Container\";\nimport ContactForm from './Components/ContactForm';\nimport ContactList from './Components/ContactList';\nimport FilterContacts from './Components/FilterContacts';\nimport \"./App.css\"\n\nclass App extends Component {\n    componentDidMount() {\n        this.props.fetchContacts()\n    };\n\n    render() {\n        return (\n            <Container>\n                <h1>Phonebook</h1>\n                <ContactForm />\n                <h2>Contacts</h2>\n                <FilterContacts />\n                {\n                    this.props.isLoading && <h3 className='loader'>loading...</h3>\n                }\n                <ContactList />\n            </Container>\n        )\n    };\n};\n\nconst mapStateToProps = state => ({\n    isLoading: getLoading(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n    fetchContacts: () => dispatch(contactsOperations.fetchContacts()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","import { combineReducers } from \"redux\";\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n    fetchContactsRequest,\r\n    fetchContactsSuccess,\r\n    fetchContactsError,\r\n    addContactRequest,\r\n    addContactSuccess,\r\n    addContactError,\r\n    deleteContactRequest,\r\n    deleteContactSuccess,\r\n    deleteContactError,\r\n    changeFilter\r\n} from './contacts-actions';\r\n\r\nconst items = createReducer([], {\r\n    [fetchContactsSuccess]: (_, {payload}) => payload,\r\n    [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n    [deleteContactSuccess]: (state, { payload }) =>\r\n        state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n    [fetchContactsRequest]: () => true,\r\n    [fetchContactsSuccess]: () => false,\r\n    [fetchContactsError]: () => false,\r\n    [addContactRequest]: () => true,\r\n    [addContactSuccess]: () => false,\r\n    [addContactError]: () => false,\r\n    [deleteContactRequest]: () => true,\r\n    [deleteContactSuccess]: () => false,\r\n    [deleteContactError]: () => false,\r\n});\r\n\r\nconst filter = createReducer('', {\r\n    [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n    items,\r\n    filter,\r\n    loading\r\n});","import { configureStore, getDefaultMiddleware, combineReducers } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\nimport {\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport contactsReducer from './contacts/contacts-reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  contacts: contactsReducer,\r\n});\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst store = configureStore({\r\n    reducer: rootReducer,\r\n    middleware,\r\n    devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\n// const persistor = persistStore(store);\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n        <App />\n    </Provider>  \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3Xr5u\",\"field\":\"ContactForm_field__2pmwz\",\"input\":\"ContactForm_input__TxhKq\",\"button\":\"ContactForm_button__3F_3O\"};"],"sourceRoot":""}